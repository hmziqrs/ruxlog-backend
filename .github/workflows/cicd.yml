name: CI/CD

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: "Release version tag to build (e.g., v1.2.3)"
        required: false
        default: ""

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # owner/repo

jobs:
  build-and-push:
    name: Build and Push Image
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.version }}
      raw: ${{ steps.vars.outputs.raw }}
      is_stable: ${{ steps.vars.outputs.is_stable }}
      image_ref: ${{ steps.image.outputs.ref }}
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine version/tag
        id: vars
        env:
          INPUT_VERSION: ${{ github.event.inputs.version }}
        run: |
          # Prefer explicit workflow input (manual), otherwise use the pushed tag
          VERSION="${INPUT_VERSION:-${GITHUB_REF_NAME}}"
          if [ -z "$VERSION" ]; then
            echo "No version provided and not a tag push" >&2
            exit 1
          fi
          # Support tags like v1.2.3
          RAW="${VERSION#v}"
          if [[ "$RAW" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            IS_STABLE=1
          else
            IS_STABLE=0
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "raw=$RAW" >> $GITHUB_OUTPUT
          echo "is_stable=$IS_STABLE" >> $GITHUB_OUTPUT

      - name: Compose tag list
        id: tags
        run: |
          TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.version }}"
          TAGS="$TAGS"$'\n'"${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.raw }}"
          if [ "${{ steps.vars.outputs.is_stable }}" = "1" ]; then
            TAGS="$TAGS"$'\n'"${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          fi
          {
            echo 'tags<<EOF'
            echo "$TAGS"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Expose image reference
        id: image
        run: |
          echo "ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.version }}" >> $GITHUB_OUTPUT

  # Deployment is handled by Watchtower polling on the VPS. No webhook/SSH.
